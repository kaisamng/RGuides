[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"website serves digital companion TJ students taking RS1 class. Materials format heavily inspired borrowed Kane (2022) Starnes, Yates, Moore (2012) .Almost everything else written Mr. Ng Mr. McFee.","code":""},{"path":"index.html","id":"casper-sleeping","chapter":"Preface","heading":"Casper Sleeping","text":"","code":""},{"path":"installing-r-and-rstudio.html","id":"installing-r-and-rstudio","chapter":"Installing R and RStudio","heading":"Installing R and RStudio","text":"never interact R class.Yes, heard right. class called RS1 R, using R.\nFIGURE 0.1: Analogy difference R RStudio.\nThough book, using R via RStudio. R RStudio car’s engine dashboard.precisely, R programming language runs computations, RStudio integrated development environment (IDE) provides interface many convenient features. Just access speedometer, rearview mirrors, navigation system makes driving much easier, using RStudio’s interface makes using R much easier.However, depending kind computer , two different ways installing RStudio.","code":""},{"path":"installing-r-and-rstudio.html","id":"using-a-personal-laptop","chapter":"Installing R and RStudio","heading":"Using a Personal Laptop","text":"Download install R RStudio (Desktop version) computer.first: Download install R.first: Download install R.second: Download install RStudio Desktop (free version).second: Download install RStudio Desktop (free version).","code":""},{"path":"installing-r-and-rstudio.html","id":"using-an-fcps-laptop","chapter":"Installing R and RStudio","heading":"Using an FCPS Laptop","text":"FCPS Policy allows apps installed version App Store called Software Center. Depending county middle school come , may already familar following procedure.first: Open Software Center app FCPS Laptop. Open Start Menu type Software Center.\nFIGURE 0.2: Analogy difference R RStudio.\nsecond: search box top right, type RStudio.second: search box top right, type RStudio.Select app, click Install. patient– sometimes, process can take 10 minutes.Select app, click Install. patient– sometimes, process can take 10 minutes.\nFIGURE 0.3: Analogy difference R RStudio.\n","code":""},{"path":"installing-r-and-rstudio.html","id":"software-center-troubleshooting","chapter":"Installing R and RStudio","heading":"Software Center Troubleshooting","text":"Software Center taking longer 10 minutes install, follow steps:Sign laptop FCPS username password.Sign laptop FCPS username password.signed taskbar fully loaded, click Red Shield Icon taskbar seen : Next, click McAfee Agent Status Monitor.McAfee Agent Status window loaded, click Check New Policies click Enforce Policies.Close McAfee Agent Monitor Window.Close McAfee Agent Monitor Window.Click Red Shield . Click ‘McAfee Endpoint Security.’ Let window load.Click Red Shield . Click ‘McAfee Endpoint Security.’ Let window load.Click “Update Now” button upper right corner.Close McAfee Endpoint Security window head Software Center get R Studio installed.go without problem time around. still experiencing issues try restarting laptop see previous installation halting getting software installed.still unable get software installed please stop Room 281 lunch 8A (block 8th period) assistance member Tech Team.","code":""},{"path":"interacting-with-r-studio.html","id":"interacting-with-r-studio","chapter":"1 Interacting with R Studio","heading":"1 Interacting with R Studio","text":"want slower introduction providing , check short book, Getting Used R, RStudio, R Markdown. Ismay Kennedy (2016) include screencast recordings can follow along pause learn. include introduction R Markdown, tool used reproducible research R.","code":""},{"path":"interacting-with-r-studio.html","id":"using-rstudio","chapter":"1 Interacting with R Studio","heading":"1.1 Using RStudio","text":"\nFIGURE 1.1: Icons R versus RStudio computer.\nMuch don’t drive car interacting directly engine rather interacting elements car’s dashboard, won’t using R directly rather use RStudio’s interface. install R RStudio computer, ’ll two new programs (also called applications) can open. Always work RStudio directly R application.Let’s get familiar RStudio. Open RStudio. see three panes, panels, dividing screen: Console pane, Files pane, Environment pane.workspace. Start big pane left:three panels (tabs) window, ’ll focusing Console Terminal. first start R, Console gives information version R. Console can type run R code. example, type 1 + 1 hit return, Console returns 2.Look top right:main two tabs ’ll using Environment Git (yet visible). Environment tab shows datasets variables currently loaded R. case, loaded dataset 3407 rows 5 columns variable x equal 5. , Environment empty. Let’s change . Go Console type:assigned value 5 object, x. <- operator used assign values objects R. Now, hit return/enter see variable x equal 5 Environment tab. must always hit return/enter typing command, otherwise RStudio realize want R execute command. Look bottom right window:Files tab displays computer’s file system. create project later, tab automatically show contents project’s folder. Plots tab show preview plots make RStudio.","code":"\nx <- 5"},{"path":"interacting-with-r-studio.html","id":"packages","chapter":"1 Interacting with R Studio","heading":"1.2 Packages","text":"R packages, also known libraries, extend power R providing additional functions data.\nFIGURE 1.2: Analogy R versus R packages.\nR like new mobile phone: certain amount features use first time, doesn’t everything. R packages like apps can download onto phone.Consider analogy Instagram. new phone want share photo friends. need :Install app: Since phone new include Instagram app, need download app. . (might need future update app.)Open app: ’ve installed Instagram, need open . need every time use app.process similar R package. need :\nFIGURE 1.3: Installing versus loading R package\nInstall package: like installing app phone. packages installed default install R RStudio. Thus want use package first time, need install . ’ve installed package, likely won’t install unless want update newer version.“Load” package: “Loading” package like opening app phone. Packages “loaded” default start RStudio. need “load” package want use every time restart RStudio.","code":""},{"path":"interacting-with-r-studio.html","id":"installing-a-package","chapter":"1 Interacting with R Studio","heading":"1.2.1 Installing a Package","text":"Install package need RS1. Console pane within RStudio, type:press return/enter keyboard. Note must include quotation marks around name package. package can depend packages, automatically installed needed.","code":"\ninstall.packages(\"tidyverse\")"},{"path":"interacting-with-r-studio.html","id":"loading-a-package","chapter":"1 Interacting with R Studio","heading":"1.2.2 Loading a Package","text":"load package want use every time start RStudio.Recall ’ve installed package, need “load” . using library() command.example, load remotes package, run following code Console. mean “run following code?” Either type copy--paste code Console hit enter/return key.running earlier code, blinking cursor appear next > symbol. (> “prompt.”) means successful remotes package now loaded ready use. , however, get red “error message” reads:haven’t successfully installed package. get error message, make sure install tidyverse package proceeding.historical reasons packages also known libraries, relevant command loading library().Note R occasionally ask want install packages. Almost time want , otherwise R asking .","code":"\nlibrary(tidyverse)Error in library(tidyverse) : there is no package called ‘tidyverse’"},{"path":"interacting-with-r-studio.html","id":"using-a-package","chapter":"1 Interacting with R Studio","heading":"1.2.3 Using a Package","text":"load package want use every time start RStudio. don’t load package attempting use one features, see error message like:different error message one just saw package installed yet. R telling trying use function package yet loaded. R doesn’t know “find” function want use.","code":"Error: could not find function"},{"path":"vectors.html","id":"vectors","chapter":"2 Vectors","heading":"2 Vectors","text":"taken Ismay Kennedy (2016) Kane (2022).","code":""},{"path":"vectors.html","id":"basic-commands","chapter":"2 Vectors","heading":"2.0.1 Basic Commands","text":"get started, terms, tips, tricks know getting started R.Functions: perform tasks taking input called argument returning output. Take look example .sqrt() function gives us square root argument. 64 argument. Therefore, output 8. Try console!Help files: provide documentation functions datasets. can bring help files adding ? name object run console. boxplot command, example, creates boxplot. Run ?boxplot console see pops .Help files: provide documentation functions datasets. can bring help files adding ? name object run console. boxplot command, example, creates boxplot. Run ?boxplot console see pops .Code comments: text placed # symbol. Nothing run # symbol, useful include comments code, always . image shows code comment looks like.Code comments: text placed # symbol. Nothing run # symbol, useful include comments code, always . image shows code comment looks like.Errors, warnings, messages: generally reported red font. error, code run. Read (/Google) message try fix . Warnings don’t prevent code completing. example, create scatterplot based data two missing values, see warning:\nWarning message:\nRemoved 2 rows containing missing values (geom_point).  \nMessages similar. cases, fix underlying issue warning/message goes away.Errors, warnings, messages: generally reported red font. error, code run. Read (/Google) message try fix . Warnings don’t prevent code completing. example, create scatterplot based data two missing values, see warning:Messages similar. cases, fix underlying issue warning/message goes away.Remember: last chapter, used operator <- store number 9 variable called x. operator <- used R store literally object variable, can referenced later. using <- programming.Remember, don’t store anything run <- command. Check top right pane RStudio verify stored object.","code":"\nsqrt(64)## [1] 8Warning message:\nRemoved 2 rows containing missing values (geom_point).  "},{"path":"vectors.html","id":"vector-overview","chapter":"2 Vectors","heading":"2.1 Vector Overview","text":"vector basic data object R. essentially list, can take different types. Even write single value R, considered vector length 1. typed x <- 9, vector called x length 1, single element 9.class, focus character, double, logical vectors.numeric vector, also called double vector, vector entirely made numbers. vector entirely decimals integer vector, can specify R number integer adding L end– 34L specifies integer 34. reasons behind floating point arithmetic computers, won’t get differences class.Character vectors, hand, stores combination letters symbols. soon include character double vector, become character vector.Logical vectors store truth values TRUE FALSE. useful meeting condition.str command allows us see vector type.","code":"\n# Atomic vector of type character.\ncharacter<- \"abc\"\n\n# Atomic vector of type double.\ndouble <- 12.5\n\n# Atomic vector of type logical.\nlogical<- TRUE\nstr(character)##  chr \"abc\"\nstr(double)##  num 12.5\nstr(logical)##  logi TRUE"},{"path":"vectors.html","id":"concatenating-vectors","chapter":"2 Vectors","heading":"2.1.1 Concatenating Vectors","text":"like list many entries put vector object, can via c function. enter ?c R Console, can gain information . “c” stands combine concatenate.Suppose wanted way store four names:can see friend_names outputted four entries . vector known strings vector since contains character strings. can check see type object using class function:Next suppose wanted put ages friends another vector. can use c function:finally, example logical vector:Note TRUE FALSE must caps R recognize boolean (“truth”) values.user’s perspective, huge difference values stored, still good habit specify class variables whenever possible help collaboration documentation.","code":"\nfriend_names <- c(\"Abram\", \"Bryant\", \"Colleen\", \"David\", \"Esther\", \"Jeremiah\")\nfriend_names## [1] \"Abram\"    \"Bryant\"   \"Colleen\"  \"David\"    \"Esther\"   \"Jeremiah\"\nclass(friend_names)## [1] \"character\"\nfriend_ages <- c(34, 35, 32, 29, 30, 30)\nclass(friend_ages)## [1] \"numeric\"\nlives_in_dc <- c(TRUE, FALSE, FALSE, TRUE, FALSE, TRUE)"},{"path":"vectors.html","id":"using-the-seq-function","chapter":"2 Vectors","heading":"2.1.2 Using the seq() function","text":"likely way enter character values vector via c function. Numeric values can entered couple different ways. One using c function, saw . numbers natural order, can also specify sequence numbers starting value, ending value, amount increment step sequence:now better sense numbers [ ] output refer . helps keep track printing output. first element denoted [1] 0, 18th entry ([18]) 34, 35th entry ([35]) 68. serve nice introduction indexing subsetting Section 2.3.can also set sequence go negative number decimal value. next example.","code":"\nsequence_by_2 <- seq(from = 0, to = 100, by = 2)\nsequence_by_2##  [1]   0   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38  40  42  44  46  48\n## [26]  50  52  54  56  58  60  62  64  66  68  70  72  74  76  78  80  82  84  86  88  90  92  94  96  98\n## [51] 100\nclass(sequence_by_2)## [1] \"numeric\"\ndec_frac_seq <- seq(from = 10, to = 3, by = -0.2)\ndec_frac_seq##  [1] 10.0  9.8  9.6  9.4  9.2  9.0  8.8  8.6  8.4  8.2  8.0  7.8  7.6  7.4  7.2  7.0  6.8  6.6  6.4  6.2\n## [21]  6.0  5.8  5.6  5.4  5.2  5.0  4.8  4.6  4.4  4.2  4.0  3.8  3.6  3.4  3.2  3.0\nclass(dec_frac_seq)## [1] \"numeric\""},{"path":"vectors.html","id":"using-the-operator","chapter":"2 Vectors","heading":"2.1.3 Using the : operator","text":"short-cut version seq version can achieved using : operator. increasing values 1 (-1), can use : operator build vector:","code":"\ninc_seq <- 98:112\ninc_seq##  [1]  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112\ndec_seq <- 5:-5\ndec_seq##  [1]  5  4  3  2  1  0 -1 -2 -3 -4 -5"},{"path":"vectors.html","id":"operations-with-vectors","chapter":"2 Vectors","heading":"2.2 Operations with Vectors","text":"R can work extremely quickly provided vector collection vectors like data frame. Instead iterating element perform operation might need programming languages, can something like :Just like , every age five started. extends adding two vectors together1.","code":"\nfive_years_older <- friend_ages + 5\nfive_years_older## [1] 39 40 37 34 35 35"},{"path":"vectors.html","id":"vector-selection","chapter":"2 Vectors","heading":"2.3 Selecting elements from a vector","text":"vector want select elements , use [ ] operator. [ ] operator selects vectors based index, starting 1st element.Unlike programming languages, R start index 0– starts index 1!!!careful .","code":"\n#We're using the friend_names list.\nfriend_names## [1] \"Abram\"    \"Bryant\"   \"Colleen\"  \"David\"    \"Esther\"   \"Jeremiah\"\n#Selects the first element from the list.\nfriend_names[1]## [1] \"Abram\"\n#Selects the 2nd, 3rd, and 4th element from the list.\nfriend_names[2:4]## [1] \"Bryant\"  \"Colleen\" \"David\"\n#Selects every other element from the list.\nfriend_names[seq(1, 6, by=2)]## [1] \"Abram\"   \"Colleen\" \"Esther\"\n#Selects every element except the 2nd to 4th element. Notice that 2:4 generates the sequence 2, 3, 4, which you then concatenate using c(). Then, you use the `-` operator to exclude those opsitions from friend_names. \nfriend_names[-c(2:4)]## [1] \"Abram\"    \"Esther\"   \"Jeremiah\"\n#Select the last element of the vector. Note the use of the `length()` function-- it will always select the last element of the list, because the length of the vector is always equal to the index of the last element. \nfriend_names[length(friend_names)]## [1] \"Jeremiah\""},{"path":"vectors.html","id":"vector-logical-selection","chapter":"2 Vectors","heading":"2.3.1 Using logicals (TRUE, FALSE) in a dataframe","text":"’ve seen, can specify directly elements ’d like select based integer values indices data frame. Another way select elements using logical vector:can extended choose specific elements data frame based values “cells” data frame. logical vector like one (c(TRUE, FALSE, FALSE, FALSE, FALSE, TRUE)) can generated based entries:see first element new vector set TRUE \"Abram\" first entry friend_names vector. thus another way subsetting return names \"Abram\" \"Esther\":%% operator looks element-wise friend_names vector tries match entry entries c(\"Abram\", \"Microsoft Bing\"). Given “Microsoft Bing” friend_names list, R return , %% operator returns FALSE.","code":"\nfriend_names[c(TRUE, FALSE, FALSE, FALSE, FALSE, TRUE)]## [1] \"Abram\"    \"Jeremiah\"\nfriend_names == \"Abram\"## [1]  TRUE FALSE FALSE FALSE FALSE FALSE\nfriend_names[friend_names %in% c(\"Abram\", \"Microsoft Bing\")]## [1] \"Abram\""},{"path":"creating-dataframes.html","id":"creating-dataframes","chapter":"3 Creating Dataframes","heading":"3 Creating Dataframes","text":"","code":""},{"path":"creating-dataframes.html","id":"combining-vectors-into-dataframes","chapter":"3 Creating Dataframes","heading":"3.0.1 Combining Vectors into Dataframes","text":"last chapter, learned create vectors included elements, either c(), seq(), :.vector can considered column within table. want create table, just combine vectors together, right? Let’s combine friend_names friend_ages vectors previous chapter:can see, combine two vectors together single, longer vector. give us table multiple rows columns, expected.order combine vectors information single data frame, can use data.frame function:created names variable friends data frame corresponds values friend_names vector similarly ages variable friends corresponds values friend_ages.Note three vectors used length. can check length using length() function.","code":"\nfriends <- c(friend_names, friend_ages)\nfriends##  [1] \"Abram\"    \"Bryant\"   \"Colleen\"  \"David\"    \"Esther\"   \"Jeremiah\" \"34\"       \"35\"       \"32\"      \n## [10] \"29\"       \"30\"       \"30\"\nfriends <- data.frame(names = friend_names,\n           ages = friend_ages,\n           DC_Resident = lives_in_dc,\n           stringsAsFactors = FALSE)\nfriends##      names ages DC_Resident\n## 1    Abram   34        TRUE\n## 2   Bryant   35       FALSE\n## 3  Colleen   32       FALSE\n## 4    David   29        TRUE\n## 5   Esther   30       FALSE\n## 6 Jeremiah   30        TRUE\nlength(friend_names)## [1] 6\nlength(friend_ages)## [1] 6\nlength(lives_in_dc)## [1] 6"},{"path":"creating-dataframes.html","id":"troubleshooting-data.frame","chapter":"3 Creating Dataframes","heading":"3.0.1.1 Troubleshooting data.frame","text":"vectors equal length, R return error.previous example, six friends: Abram, Bryant, Colleen, David, Esther, Jeremiah. Let’s say don’t know whether Paul lives DC, lives_in_dc vector length 5. ’m overwriting old lives_in_dc vector one .point, decision make. can either fix mistake add data, can leave NA. NA special value used within R, talk later.","code":"\nlives_in_dc<- c(TRUE, FALSE, TRUE, TRUE, FALSE)\n\nlength(friend_names)## [1] 6\nlength(friend_ages)## [1] 6\nlength(lives_in_dc)## [1] 5\n#Combine the dataframe just like I had before. \nfriends <- data.frame(names = friend_names,\n           ages = friend_ages,\n           DC_Resident = lives_in_dc,\n           stringsAsFactors = FALSE)## Error in data.frame(names = friend_names, ages = friend_ages, DC_Resident = lives_in_dc, : arguments imply differing number of rows: 6, 5\n#Force your vector to be a length of 6\nlives_in_dc<- c(TRUE, TRUE, FALSE, TRUE, FALSE, NA)\n\nlength(friend_names)## [1] 6\nlength(friend_ages)## [1] 6\nlength(lives_in_dc)## [1] 6\n#Combine the dataframe just like I had before. \nfriends <- data.frame(names = friend_names,\n           ages = friend_ages,\n           DC_Resident = lives_in_dc,\n           stringsAsFactors = FALSE)\n\nfriends##      names ages DC_Resident\n## 1    Abram   34        TRUE\n## 2   Bryant   35        TRUE\n## 3  Colleen   32       FALSE\n## 4    David   29        TRUE\n## 5   Esther   30       FALSE\n## 6 Jeremiah   30          NA"},{"path":"creating-dataframes.html","id":"importing-an-excel-or-cvs-file-into-r-as-a-data-frame","chapter":"3 Creating Dataframes","heading":"3.0.2 Importing an Excel or CVS File into R as a Data frame","text":"XLSX CSV files many datasets stored. open Excel app. can tell Excel icon:\nFIGURE 3.1: Excel File.\ncan open files Excel preview data perform basic data analysis, serious data analysis, better control charts graphics, can import R.continue, run command:Whenever manipulate file R, R assumes file within working directory. Think working directory desk. left math homework desk home, need mom take picture work, need tell left .Unless give exact path file, R always assume referencing file working directory. example, FCPS computers, default working directory Documents. download CSV file data.csv, automatically goes Downloads folder instead. import Excel, can import data.csv move Documents folder.set working directory, go R Studio Menu > Session > Set Working Directory > Choose Directory.strongly suggest , download data file, move folder dedicated purpose– call “IBET Project” “RS1 Unit 1 Project” whatever– inside Documents folder.use OneDrive Google Drive. services mess data.Importing dataset easy.XLSX: Go menu > File > Import Dataset > Excel.CSV: Go menu > File > Import Dataset > Text (readr).case, using anime dataset. Click “browse” find file want import R.case, using anime dataset. Click “browse” find file want import R.everything looks good, click Import bottom right window.\nwant name dataset ’s stored, bottom left window.\neverything looks good, click Import bottom right window.want name dataset ’s stored, bottom left window.now dataset imported. Verify correctly imported, top right.now dataset imported. Verify correctly imported, top right.","code":"\ngetwd()## [1] \"/Users/kaisamng/Github\""},{"path":"creating-dataframes.html","id":"selecting-material-from-dataframes","chapter":"3 Creating Dataframes","heading":"3.1 Selecting Material from Dataframes","text":"Let’s practice importing data. Download periodic table data now, import R periodic_table.Remember move working directory: getwd()Remember move working directory: getwd()Since CSV file, use Text (readr) function.Since CSV file, use Text (readr) function.Change name data set periodic_table import . Remember ’s bottom left.Change name data set periodic_table import . Remember ’s bottom left.\nTABLE 3.1: Periodic Table\nbig data frame information periodic table, wanted extract smaller pieces data frame?","code":""},{"path":"creating-dataframes.html","id":"selecting-a-column-using","chapter":"3 Creating Dataframes","heading":"3.1.1 Selecting a column using $","text":"default, R organize character strings alphabetical order. see , ’ll introduce two new features: table function $ operator.Let’s say ’m interested many elements gas, liquid, solid state room temperature. Looking periodic_table columns, see column gives information state_at_stp.can see:access specific variables inside data frame, can entering name data frame followed $ name variable. (Note spaces variable names work. ’ll likely learn hard way, .)table function provides count number elements appear state. can see, ordering .","code":"\nperiodic_table$state_at_stp##   [1] \"Gas\"    \"Gas\"    \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Gas\"    \"Gas\"    \"Gas\"    \"Gas\"    \"Solid\" \n##  [12] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Gas\"    \"Gas\"    \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\" \n##  [23] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\" \n##  [34] \"Solid\"  \"Liquid\" \"Gas\"    \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\" \n##  [45] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Gas\"    \"Solid\" \n##  [56] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\" \n##  [67] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\" \n##  [78] \"Solid\"  \"Solid\"  \"Liquid\" \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Gas\"    \"Solid\"  \"Solid\" \n##  [89] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\" \n## [100] \"Solid\"  \"Solid\"  \"Solid\"  \"Solid\"  NA       NA       NA       NA       NA       NA       NA      \n## [111] NA       NA       NA       NA       NA       NA       NA       NA\ntable(periodic_table$state_at_stp)## \n##    Gas Liquid  Solid \n##     11      2     90"},{"path":"creating-dataframes.html","id":"using-in-a-dataframe","chapter":"3 Creating Dataframes","heading":"3.1.2 Using [ ] in a dataframe","text":"Recall 2.3 section use [ ] operator, select elements single vector. can extend operations dataframe. [ ] operator allows select elements within vector dataframe based row column position. starts locating row position, column position.single vector can thought dataframe one row \\(n\\) columns, just needed single number select element. Now, since multiple rows columns, need comma differentiate row column index.","code":""},{"path":"creating-dataframes.html","id":"selecting-a-single-element-from-a-dataframe","chapter":"3 Creating Dataframes","heading":"3.1.2.1 Selecting a single element from a dataframe","text":"Let’s say wanted select name Sodium, row 11, column 3.Notice commands give desired value– Sodium– formats different. + first command, R gives back table 1 row 1 column. isn’t coincidence, pulled directly table . ’s difference copying “cell” Excel versus double-clicking cell, copying text inside. , directly pulled table, R returns back value within table. + second gives single character vector. makes sense– $ operator selects single vector name table, selects 11th element. Generally, way want select single table.Recall use [ ] vector printed, help us better understand printing large vector. can use tool select tenth twentieth elements periodic_table$name variable:","code":"\nperiodic_table[11, 3]## # A tibble: 1 × 1\n##   name  \n##   <chr> \n## 1 Sodium\nperiodic_table$name[11]## [1] \"Sodium\"\nperiodic_table$name[10:20]##  [1] \"Neon\"       \"Sodium\"     \"Magnesium\"  \"Aluminium\"  \"Silicon\"    \"Phosphorus\" \"Sulfur\"    \n##  [8] \"Chlorine\"   \"Argon\"      \"Potassium\"  \"Calcium\""},{"path":"creating-dataframes.html","id":"using-with-a-data-frame","chapter":"3 Creating Dataframes","heading":"3.1.2.2 Using [ , ] with a data frame","text":"now seen select specific elements vector variable, want subset values full data frame across rows (observations) columns (variables).?can use [ , ] spot comma corresponds rows spot comma corresponds columns. Let’s select rows 40 50 columns 1, 2, 4 periodic_table:comma important. Let’s look examples:","code":"\nperiodic_table[41:50, c(1, 2, 4)]## # A tibble: 10 × 3\n##    atomic_number symbol name_origin                                                                  \n##            <dbl> <chr>  <chr>                                                                        \n##  1            41 Nb     Niobe, daughter of king Tantalus from Greek mythology                        \n##  2            42 Mo     the Greek molybdos meaning 'lead'                                            \n##  3            43 Tc     the Greek tekhn??tos meaning 'artificial'                                    \n##  4            44 Ru     Ruthenia, the New Latin name for Russia                                      \n##  5            45 Rh     the Greek rhodos, meaning 'rose coloured'                                    \n##  6            46 Pd     the then recently discovered asteroid Pallas, considered a planet at the time\n##  7            47 Ag     English word (argentum in Latin)                                             \n##  8            48 Cd     the New Latin cadmia, from King Kadmos                                       \n##  9            49 In     indigo                                                                       \n## 10            50 Sn     English word (stannum in Latin)\n#Returns all of column 2:\nperiodic_table[2]## # A tibble: 118 × 1\n##    symbol\n##    <chr> \n##  1 H     \n##  2 He    \n##  3 Li    \n##  4 Be    \n##  5 B     \n##  6 C     \n##  7 N     \n##  8 O     \n##  9 F     \n## 10 Ne    \n## # … with 108 more rows\n#Returns all of row 2:\nperiodic_table[2, ]## # A tibble: 1 × 22\n##   atomic_number symbol name   name_origin         group period block state_at_stp occurrence description\n##           <dbl> <chr>  <chr>  <chr>               <dbl>  <dbl> <chr> <chr>        <chr>      <chr>      \n## 1             2 He     Helium the Greek helios, …    18      1 s     Gas          Primordial Noble gas  \n## # … with 12 more variables: atomic_weight <dbl>, aw_uncertainty <dbl>, any_stable_nuclides <chr>,\n## #   density <dbl>, density_predicted <lgl>, melting_point <dbl>, mp_predicted <lgl>,\n## #   boiling_point <dbl>, bp_predicted <lgl>, heat_capacity <dbl>, electronegativity <dbl>,\n## #   abundance <dbl>\n#Returns all of column 2:\nperiodic_table[ ,2]## # A tibble: 118 × 1\n##    symbol\n##    <chr> \n##  1 H     \n##  2 He    \n##  3 Li    \n##  4 Be    \n##  5 B     \n##  6 C     \n##  7 N     \n##  8 O     \n##  9 F     \n## 10 Ne    \n## # … with 108 more rows\n#Returns a single element in Row 2, Column 2:\nperiodic_table[2,2]## # A tibble: 1 × 1\n##   symbol\n##   <chr> \n## 1 He"},{"path":"creating-dataframes.html","id":"using-logical-vectors-to-select-from-a-dataframe","chapter":"3 Creating Dataframes","heading":"3.1.2.3 Using Logical Vectors to select from a dataframe","text":"Recall 2.3.1 use logical vector, %% operator, select elements single vector. can extend operations dataframe.Now can think subset entire data frame using sort creation two logical vectors (one rows one columns):extra parentheses around periodic_table$name %% c(\"Hydrogen\", \"Oxygen\") good habit get ensure everything comma used select specific rows matching condition. columns, can specify vector column names focus variables. resulting table gives atomic_weight state_at_stp \"Hydrogen\" \"Oxygen\".many complicated ways subset data frame one can use subset function built R, experience, whenever want anything complicated done , easier use filter select functions dplyr package.","code":"\nperiodic_table[ (periodic_table$name %in% c(\"Hydrogen\", \"Oxygen\") ),\n        c(\"atomic_weight\", \"state_at_stp\")]## # A tibble: 2 × 2\n##   atomic_weight state_at_stp\n##           <dbl> <chr>       \n## 1          1.01 Gas         \n## 2         16.0  Gas"},{"path":"census-data-and-linear-regression.html","id":"census-data-and-linear-regression","chapter":"4 Census Data and Linear Regression","heading":"4 Census Data and Linear Regression","text":"","code":""},{"path":"census-data-and-linear-regression.html","id":"install-packages-and-census-api-key","chapter":"4 Census Data and Linear Regression","heading":"4.1 Install packages and Census API Key","text":"Start loading required libraries.Install Census API Key R call. uses census_api_key command tidycensus.","code":"\nlibrary(\"tidycensus\")\nlibrary(\"tidyverse\")\nlibrary(\"reshape\")\ncensus_api_key(\"<Census Key Goes Here>\", install=TRUE, overwrite=TRUE)"},{"path":"census-data-and-linear-regression.html","id":"pull-data-from-the-census","chapter":"4 Census Data and Linear Regression","heading":"4.2 Pull data from the Census","text":"Pull variable data dataframe.Notice “geography” “zcta,” Census Bureau’s equivalent ZIP Code.Notice “geography” “zcta,” Census Bureau’s equivalent ZIP Code.state=“VA” variable helps limit scope data just VA, otherwise download US.state=“VA” variable helps limit scope data just VA, otherwise download US.\nTABLE 4.1: Zip Code Data Household Income Households Children, Without Children\n","code":"\nincome_with_children <- get_acs(geography=\"zcta\",\n                  state=\"VA\",\n                  variables=c(\"B19125_002\"),\n                  year=2019)## Getting data from the 2015-2019 5-year ACS## Using FIPS code '51' for state 'VA'\nhead(income_with_children)\n\nincome_no_children<- get_acs(geography=\"zcta\",\n                            state=\"VA\",\n                            variables=c(\"B19125_003\"),\n                            year=2019)## Getting data from the 2015-2019 5-year ACS\n## Using FIPS code '51' for state 'VA'\nhead(income_no_children)"},{"path":"census-data-and-linear-regression.html","id":"construct-a-linear-model","chapter":"4 Census Data and Linear Regression","heading":"4.3 Construct a Linear Model","text":"Every scatterplot consists Explanatory Variable, Response Variable. example, set Explanatory Variable separate variable x, Response Variable separate variable y, going graphed along x y axes respectively, scatterplot. construct linear model, fit linear model top scatterplot:\nFIGURE 4.1: Creating Scatterplot\nConstruct linear model using lm command, store variable reg_line.using summary, get computer regression printout helps evaluate whether linear regression line appropriate. two numbers care standard deviation residuals R-Squared Value. R, labeled Multiple R-Squared.\nFIGURE 4.2: Interpreting Regression Printout\nFinally, plot line best fit top data, using abline command.\nFIGURE 4.3: Scatterplot Best Fit Line added\n","code":"\nx= income_no_children$estimate\ny= income_with_children$estimate\nplot(x, y,\n                     xlab= \"No Children\",\n                     ylab=\"With Children\",\n                     main= \"Median Household of Income in Virginia, by Zip Code\")\nreg_line<- lm(income_with_children$estimate ~ income_no_children$estimate)\nsummary(reg_line)## \n## Call:\n## lm(formula = income_with_children$estimate ~ income_no_children$estimate)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -80677 -14460  -1143  13189 223578 \n## \n## Coefficients:\n##                             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)                  408.164   2570.709    0.16     0.87    \n## income_no_children$estimate    0.983      0.028   35.11   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 24900 on 636 degrees of freedom\n##   (258 observations deleted due to missingness)\n## Multiple R-squared:  0.66,   Adjusted R-squared:  0.659 \n## F-statistic: 1.23e+03 on 1 and 636 DF,  p-value: <2e-16\nplot(x, y,\n     xlab= \"No Children\",\n     ylab=\"With Children\",\n     main= \"Median Household of Income in Virginia, by Zip Code\")\nabline(reg_line, col=\"red\")"},{"path":"census-data-and-linear-regression.html","id":"create-a-residual-plot","chapter":"4 Census Data and Linear Regression","heading":"4.4 Create a Residual Plot","text":"always evaluate whether linear regression line good fit model. One tools evaluate whether regression good fit examine residual plot.Whenever create linear model using lm command,\nFIGURE 4.4: Resdial Plot linear model stored reg_line\n","code":"\nplot(reg_line$residuals, \n     ylab= \"Residual\",\n     main= \"Residual Plot for Linear Model\")"},{"path":"census-data-and-linear-regression.html","id":"creating-boxplots-with-five-number-summaries","chapter":"4 Census Data and Linear Regression","heading":"4.5 Creating boxplots with Five-Number Summaries","text":"want know households children tend higher median income households children. Let’s make two histograms.looks nice, notice y-scales . make comparable, stack histograms top using plot() function.","code":"\npar(mfrow=c(2, 1))\nno_children_histo <- hist(income_no_children$estimate,\n                          xlab= \"Median Household Income\",\n                          ylab= \"Count (number of Zip Codes)\",\n                          main= \"Median Income of Households with No Children in VA, by Zip Code\",\n                          col= \"sky blue\")\n\nno_children_boxplot <- boxplot(income_no_children$estimate,\n                               horizontal=TRUE,\n                               xlab=\"Median Household Income\",\n                               main= \"Boxplot with 1.5*IQR Outliers\"\n                               )\ntext(x=fivenum(income_no_children$estimate), labels=fivenum(income_no_children$estimate), y=1.3)\npar(mfrow=c(2, 1))\nwith_children_histo <- hist(income_with_children$estimate,\n                            xlab= \"Median Income\",\n                            ylab= \"Count (number of Zip Codes)\",\n                            main= \"Median Income of Households with Children in VA, by Zip Code\",\n                            col= \"light green\")\nwith_children_boxplot <- boxplot(income_with_children$estimate,\n                               horizontal=TRUE,\n                               xlab=\"Median Household Income\",\n                               main= \"Boxplot with 1.5*IQR Outliers\"\n                               )\ntext(x=fivenum(income_with_children$estimate), labels=fivenum(income_with_children$estimate), y=1.3)\nplot(no_children_histo, \n     col= alpha(\"sky blue\", 1),\n     xlim= c(0, 300000),\n     xlab= \"Median Income\",\n     main= \"Median Household Income in VA, by Zip Code\")\n\nplot(with_children_histo,\n     col= alpha(\"light green\", 0.5),\n     xlim=c(0,300000),\n     add= TRUE)\n\nlegend(200000, 150, c(\"No Children\", \"With Children\"), fill= c(\"sky blue\", \"light green\"), title= \"Zoomer Status\")"},{"path":"census-data-and-linear-regression.html","id":"removing-nas","chapter":"4 Census Data and Linear Regression","heading":"4.5.1 Removing NA’s","text":"Let’s say want find average household income households children. run following command.result returns NA instead, rather actual statistic. ?NA’s show either data available, sample size small data can personally identifiable. Census suppresses data.Whether completely remove NA’s , dependent context. create data visualization, R automatically exclude NA’s analysis.contexts, may want replace NA’s specific number like 0. Talk teacher continue.","code":"\nmean(income_with_children$estimate)## [1] NA\nmean(na.omit(income_with_children$estimate))## [1] 83832"},{"path":"intro-to-two-sample-t-tests.html","id":"intro-to-two-sample-t-tests","chapter":"5 Intro to Two-Sample T-Tests","heading":"5 Intro to Two-Sample T-Tests","text":"","code":""},{"path":"intro-to-two-sample-t-tests.html","id":"loading-data.","chapter":"5 Intro to Two-Sample T-Tests","heading":"5.1 Loading Data.","text":"data ’ve downloaded currently CSV file. ’m going use function File>> Import Dataset >> base (readr) option.first gets loaded, want certain columns treated numeric vectors. code .","code":"\nlibrary(readr)\nanime <- read_csv(\"resources/data/anime.csv\", col_types = cols(MAL_ID = col_number(), Score = col_number(), Episodes = col_number(), Popularity = col_number(), Members = col_number(), Favorites = col_number(), Watching = col_number(), Completed = col_number(), `On-Hold` = col_number(), Dropped = col_number(),`Plan to Watch` = col_number(), `Score-10` = col_number(), `Score-9` = col_number(), `Score-8` = col_number(), `Score-7` = col_number(), `Score-6` = col_number(), `Score-5` = col_number(), `Score-4` = col_number(), `Score-3` = col_number(), `Score-2` = col_number(),`Score-1` = col_number()))## Warning: One or more parsing issues, see `problems()` for details"},{"path":"intro-to-two-sample-t-tests.html","id":"data-wrangling","chapter":"5 Intro to Two-Sample T-Tests","heading":"5.2 Data Wrangling","text":"Examine problems dataset. Notice lot randome problems treated column numeric vector, actual data value “Unknown” instead. R convert value “NA,” fine us.look, reason “Genres” column named “Genders.” Let’s rename “Genres.”Verify column names now correct.Save new file R dataframe.","code":"\nproblems(anime)## # A tibble: 16,570 × 5\n##      row   col expected actual  file                                           \n##    <int> <int> <chr>    <chr>   <chr>                                          \n##  1    13     8 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  2   213     8 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  3   873     8 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  4  1095     8 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  5  1267    33 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  6  1406     3 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  7  1506     3 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  8  1580     3 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n##  9  1580    34 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n## 10  1701     3 a number Unknown /Users/kaisamng/Github/resources/data/anime.csv\n## # … with 16,560 more rows\nhead(anime)## # A tibble: 6 × 35\n##   MAL_ID Name      Score Genders `English name` `Japanese name` Type  Episodes Aired Premiered Producers\n##    <dbl> <chr>     <dbl> <chr>   <chr>          <chr>           <chr>    <dbl> <chr> <chr>     <chr>    \n## 1      1 Cowboy B…  8.78 Action… Cowboy Bebop   カウボーイビバ… TV          26 Apr … Spring 1… Bandai V…\n## 2      5 Cowboy B…  8.39 Action… Cowboy Bebop:… カウボーイビバ… Movie        1 Sep … Unknown   Sunrise,…\n## 3      6 Trigun     8.24 Action… Trigun         トライガン      TV          26 Apr … Spring 1… Victor E…\n## 4      7 Witch Hu…  7.27 Action… Witch Hunter … Witch Hunter R… TV          26 Jul … Summer 2… TV Tokyo…\n## 5      8 Bouken O…  6.98 Advent… Beet the Vand… 冒険王ビィト    TV          52 Sep … Fall 2004 TV Tokyo…\n## 6     15 Eyeshiel…  7.95 Action… Unknown        アイシールド21  TV         145 Apr … Spring 2… TV Tokyo…\n## # … with 24 more variables: Licensors <chr>, Studios <chr>, Source <chr>, Duration <chr>, Rating <chr>,\n## #   Ranked <chr>, Popularity <dbl>, Members <dbl>, Favorites <dbl>, Watching <dbl>, Completed <dbl>,\n## #   `On-Hold` <dbl>, Dropped <dbl>, `Plan to Watch` <dbl>, `Score-10` <dbl>, `Score-9` <dbl>,\n## #   `Score-8` <dbl>, `Score-7` <dbl>, `Score-6` <dbl>, `Score-5` <dbl>, `Score-4` <dbl>,\n## #   `Score-3` <dbl>, `Score-2` <dbl>, `Score-1` <dbl>\nnames(anime)##  [1] \"MAL_ID\"        \"Name\"          \"Score\"         \"Genders\"       \"English name\"  \"Japanese name\"\n##  [7] \"Type\"          \"Episodes\"      \"Aired\"         \"Premiered\"     \"Producers\"     \"Licensors\"    \n## [13] \"Studios\"       \"Source\"        \"Duration\"      \"Rating\"        \"Ranked\"        \"Popularity\"   \n## [19] \"Members\"       \"Favorites\"     \"Watching\"      \"Completed\"     \"On-Hold\"       \"Dropped\"      \n## [25] \"Plan to Watch\" \"Score-10\"      \"Score-9\"       \"Score-8\"       \"Score-7\"       \"Score-6\"      \n## [31] \"Score-5\"       \"Score-4\"       \"Score-3\"       \"Score-2\"       \"Score-1\"\nnames(anime)[names(anime)==\"Genders\"] <- \"Genres\"##  [1] \"MAL_ID\"        \"Name\"          \"Score\"         \"Genres\"        \"English name\"  \"Japanese name\"\n##  [7] \"Type\"          \"Episodes\"      \"Aired\"         \"Premiered\"     \"Producers\"     \"Licensors\"    \n## [13] \"Studios\"       \"Source\"        \"Duration\"      \"Rating\"        \"Ranked\"        \"Popularity\"   \n## [19] \"Members\"       \"Favorites\"     \"Watching\"      \"Completed\"     \"On-Hold\"       \"Dropped\"      \n## [25] \"Plan to Watch\" \"Score-10\"      \"Score-9\"       \"Score-8\"       \"Score-7\"       \"Score-6\"      \n## [31] \"Score-5\"       \"Score-4\"       \"Score-3\"       \"Score-2\"       \"Score-1\"\nsave(anime, file=\"resources/data/anime.RData\")"},{"path":"intro-to-two-sample-t-tests.html","id":"isolate-the-variables-of-interest.","chapter":"5 Intro to Two-Sample T-Tests","heading":"5.3 Isolate the variables of interest.","text":"uses subsets rows within anime dataframe based condition brackets, saves new dataframe called action_anime. condition satifised “grep” function, search character string return “TRUE” contains “Action” within column anime$Genres.View dataframe. many animes recognize?’re interested people rated animes. Let’s calculate score column .Interesting! Let’s isolate score columns dataframes store separate vectors.","code":"\naction_anime<- anime[grep(\"Action\", anime$Genres), ]\nhead(action_anime)## # A tibble: 6 × 35\n##   MAL_ID Name       Score Genres `English name` `Japanese name` Type  Episodes Aired Premiered Producers\n##    <dbl> <chr>      <dbl> <chr>  <chr>          <chr>           <chr>    <dbl> <chr> <chr>     <chr>    \n## 1      1 Cowboy Be…  8.78 Actio… Cowboy Bebop   カウボーイビバ… TV          26 Apr … Spring 1… Bandai V…\n## 2      5 Cowboy Be…  8.39 Actio… Cowboy Bebop:… カウボーイビバ… Movie        1 Sep … Unknown   Sunrise,…\n## 3      6 Trigun      8.24 Actio… Trigun         トライガン      TV          26 Apr … Spring 1… Victor E…\n## 4      7 Witch Hun…  7.27 Actio… Witch Hunter … Witch Hunter R… TV          26 Jul … Summer 2… TV Tokyo…\n## 5     15 Eyeshield…  7.95 Actio… Unknown        アイシールド21  TV         145 Apr … Spring 2… TV Tokyo…\n## 6     18 Initial D…  8.15 Actio… Unknown        頭文字〈イニシ… TV          24 Apr … Spring 2… OB Plann…\n## # … with 24 more variables: Licensors <chr>, Studios <chr>, Source <chr>, Duration <chr>, Rating <chr>,\n## #   Ranked <chr>, Popularity <dbl>, Members <dbl>, Favorites <dbl>, Watching <dbl>, Completed <dbl>,\n## #   `On-Hold` <dbl>, Dropped <dbl>, `Plan to Watch` <dbl>, `Score-10` <dbl>, `Score-9` <dbl>,\n## #   `Score-8` <dbl>, `Score-7` <dbl>, `Score-6` <dbl>, `Score-5` <dbl>, `Score-4` <dbl>,\n## #   `Score-3` <dbl>, `Score-2` <dbl>, `Score-1` <dbl>\nmean(action_anime$Score, na.rm=TRUE)## [1] 6.8\nmean(anime$Score, na.rm=TRUE)## [1] 6.5\nanime_score<- anime$Score\naction_anime_score <- action_anime$Score"},{"path":"intro-to-two-sample-t-tests.html","id":"graph-boxplots.","chapter":"5 Intro to Two-Sample T-Tests","heading":"5.4 Graph boxplots.","text":"looks like average rating action animes indeed higher average rating animes. much? answer question, let’s first graph boxplot.","code":"\nboxplot(anime_score, action_anime_score, \n        ylim=c(0,10),\n        main= \"Boxplot comparison of All Anime vs. Action Anime\",\n        xlab= \"Rating\",\n        names=c(\"Anime\", \"Action Anime\"),\n        col=c(\"Red\", \"Green\"),\n        horizontal=TRUE)"},{"path":"intro-to-two-sample-t-tests.html","id":"run-a-two-sample-t-test.","chapter":"5 Intro to Two-Sample T-Tests","heading":"5.5 Run a Two Sample T-Test.","text":"Based boxplots, looks like ’s difference. Action animes appear rated higher rest. means:null hypothesis difference two averages, u1 - u2 =0.null hypothesis difference two averages, u1 - u2 =0.alternative hypothesis difference two averages, specifically average rating animes lower average rating action animes.alternative hypothesis difference two averages, specifically average rating animes lower average rating action animes.Set alternative hypothesis true average score animes LOWER true average score action animes.View results.Wow! ’s serious difference. Look p-value . Now need graph .","code":"\naction_t_test <- t.test(anime_score, action_anime_score, alternative= \"less\", var.equal=TRUE)## \n##  Two Sample t-test\n## \n## data:  anime_score and action_anime_score\n## t = -14, df = 15731, p-value <2e-16\n## alternative hypothesis: true difference in means is less than 0\n## 95 percent confidence interval:\n##   -Inf -0.21\n## sample estimates:\n## mean of x mean of y \n##       6.5       6.8"},{"path":"intro-to-two-sample-t-tests.html","id":"graph-the-t-distribution-and-test-statistic.","chapter":"5 Intro to Two-Sample T-Tests","heading":"5.6 Graph the t-distribution and test statistic.","text":"Let’s start :storing degrees freedom variable called action_t_test.storing degrees freedom variable called action_t_test.creating x-axis store variable called t_d_st_x_axis. equivalent drawing tick marks everywhere graph, ton tick marks. ’re making huge sequence 10^4 numbers long (10000 numbers) -15.5 15.5. helps fit massive test statistic -14.34creating x-axis store variable called t_d_st_x_axis. equivalent drawing tick marks everywhere graph, ton tick marks. ’re making huge sequence 10^4 numbers long (10000 numbers) -15.5 15.5. helps fit massive test statistic -14.34Finally, plot. Notice plot():x-value t_dist_x_axisthe x-value t_dist_x_axisthe y-value dt(t_dist_x_axis, df=action_t_test_df). generates t-value every value t_dist_x_axis, basically f(x), degrees greedom set earlier.y-value dt(t_dist_x_axis, df=action_t_test_df). generates t-value every value t_dist_x_axis, basically f(x), degrees greedom set earlier.want show ridiculous . ’re going store critical t* value 0.01 ’s variable, plot red lines.Finally, plot test statistic, using dotted line.","code":"\naction_t_test_df<- length(anime_score) +length(action_anime_score) -2 #Recall how to calculate degrees of freedom.\nt_dist_x_axis<- seq(-15.5, 15.5, length= 10^4)\nplot(t_dist_x_axis, dt(t_dist_x_axis, df=action_t_test_df), \n     type='l', \n     xlab='t', \n     ylab='',\n     main=\"The most ridiculous t-test graph ever\",\n     sub=\"Look at that test statistic in the dotted line. Just look.\")\ncrit_t_value_0.01<- qt(0.01, df=action_t_test_df)\nabline(v=crit_t_value_0.01, col='red')\nabline(v=-crit_t_value_0.01, col='red')\nabline(v=action_t_test$statistic, lty=2)"},{"path":"intro-to-anova-analysis.html","id":"intro-to-anova-analysis","chapter":"6 Intro to ANOVA Analysis","heading":"6 Intro to ANOVA Analysis","text":"","code":""},{"path":"intro-to-anova-analysis.html","id":"comparing-several-means-hummingbirds-and-tropical-flowers","chapter":"6 Intro to ANOVA Analysis","heading":"6.1 Comparing Several means: Hummingbirds and Tropical Flowers","text":"Ethan Temeles W. John Kress Amherst College studied relationship varieties tropical flower Heliconia island Dominica different species hummingbirds pollinate flowers. time, researchers believe, lengths flowers forms hummingbirds’ beaks evolved match . true, flower varieties pollinated different hummingbird species distinct distributions length.table gives length measurements (millimeters) random samples three varieties Heliconia, pollinated different species hummingbird. three varieties display distinct distributions length? particular, mean lengths flowers differ?flower data, made CSV file textbook data, imported R.\nTABLE 6.1: Flowers Dataset\norder R process data, need convert data “wide” format “long” format. also need let R know species treated “factor,” means type categorical variable (can sort data based Species) later .\nTABLE 6.2: Flowers Dataset, Long-Form Data\nLet’s follow strategy learned way back Unit 1: use graphs numerical summaries compare three distributions flower length. summary statistics use analysis:see? three varieties differ much flower length little overlap among . particular, flowers bihai longer either red yellow. mean lengths 47.6 mm H. bihai, 39.7 mm H. caribaea red, 36.2 mm H. caribaea yellow. observed differences sample means statistically significant? must develop test comparing two population means.","code":"\nFlowers<- read_csv(\"resources/data/Flowers.csv\")\nhead(Flowers) #View the Flowers Dataset\nFlowers_long<- gather(Flowers, \"Species\", \"Length\", factor_key= TRUE)\nhead(Flowers_long)\nmean_and_sd<- Flowers_long %>%\n  group_by(Species) %>%\n  summarize(mean=mean(Length, na.rm=T), \n            sd=sd(Length, na.rm=T))\nmean_and_sd"},{"path":"intro-to-anova-analysis.html","id":"the-f-test","chapter":"6 Intro to ANOVA Analysis","heading":"6.2 The F Test","text":"want test null hypothesis differences among mean lengths three populations flowers:H0:μ1 =μ2 =μ3The alternative hypothesis difference. , three population means equal:Ha : μ1, μ2, μ3 equalThe alternative hypothesis longer one-sided two-sided. “many-sided” allows relationship “three equal.”example, Ha includes case m2 = m3 m1 different value.conditions inference met, appropriate significance test comparing means analysis variance F test. Analysis variance usually abbreviated ANOVA.","code":""},{"path":"intro-to-anova-analysis.html","id":"check-for-conditions","chapter":"6 Intro to ANOVA Analysis","heading":"6.3 Check for Conditions","text":"Now stated Null Alternative Hypotheses, can check conditions:Random: Researchers took separate random samples 16 bihaii, 23 red, 15 Heliconia flowers.Random: Researchers took separate random samples 16 bihaii, 23 red, 15 Heliconia flowers.Normal: entered data R made side side boxplots. Although distributions bihai red varieties show right-skewness, don’t see nay strong skewness outliers prevent use one-way ANOVA.Normal: entered data R made side side boxplots. Although distributions bihai red varieties show right-skewness, don’t see nay strong skewness outliers prevent use one-way ANOVA.Independent: Researchers took independent samples bihai, red, yellow Heliconia. sampling without replacement used, must least 10(16) = 160 bihai, 10(23) = 230 red, 10(15) = 150 yellow flowers. pretty safe assume.Independent: Researchers took independent samples bihai, red, yellow Heliconia. sampling without replacement used, must least 10(16) = 160 bihai, 10(23) = 230 red, 10(15) = 150 yellow flowers. pretty safe assume.SD: one-way ANOVA, must check whether largest sample SD divided smallest SD ratio less 2. sample standard deviations :SD: one-way ANOVA, must check whether largest sample SD divided smallest SD ratio less 2. sample standard deviations :standard deviations satisfy rule thumb (largest SD)/ (smallest SD) less 2, can proceed.Since satifised 3 conditions, can safely use ANOVA compare mean lengths three populations.","code":"\nggplot(Flowers_long, aes(x=Length, y=Species, fill=Species))+\n  geom_boxplot(color=\"black\")+ \n  labs(title= \"Flower Lengths from Textbook\")+\n  theme_gdocs()+ \n  geom_jitter(width=0.1) #This overlays a jittered dotplot on top of the boxplot."},{"path":"intro-to-anova-analysis.html","id":"the-f-distribution","chapter":"6 Intro to ANOVA Analysis","heading":"6.4 The F Distribution","text":"variances three populations naturally larger variance two populations. Just like two populations naturally larger variance, thus requires t-distribution (“area” tails), need use different distribution takes account larger variance (even “area” tails. distribution called F-Distribution.\nFIGURE 6.1: F-Distribution\nF-distributions family right-skewed distributions take values greater 0. possible shapes. specific F distribution determined degrees freedom numerator denominator F statistic. describing F distribution, always give numerator degrees freedom first. notation F (df1, df2) F distribution df1 degrees freedom numerator df2 degrees freedom denominator. Interchanging degrees freedom changes distribution, order important.","code":""},{"path":"intro-to-anova-analysis.html","id":"finding-the-degrees-of-freedom-for-f","chapter":"6 Intro to ANOVA Analysis","heading":"6.4.1 Finding the Degrees of Freedom for F","text":"two earlier examples, compared mean lengths three varieties flowers,k=3.three sample sizes n1 =16,n2 =23,n3 =15. total number observations therefore N = 16 + 23 + 15 = 54. ANOVA F test numerator degrees freedom \\[k - 1 = 3 - 1 = 2\\] denominator degrees freedom \\[N - k = 54 - 3 = 51\\].","code":""},{"path":"intro-to-anova-analysis.html","id":"understanding-the-f-statistic","chapter":"6 Intro to ANOVA Analysis","heading":"6.4.2 Understanding the F Statistic","text":"Just like test statistic two-sample t-test, need something similar tell us distance statistic away Null Hypothesis. distance called F Statistic.F Statistic calculated :\\[ F= \\frac{\\text{variation among sample means}}{\\text{variation among individuals within sample}} \\]Specifically, variation calculated dividing Mean Square Groups Mean Square Error. statistic reproduced , know ’d never hand– R .","code":""},{"path":"intro-to-anova-analysis.html","id":"calculate-the-f-statistic","chapter":"6 Intro to ANOVA Analysis","heading":"6.4.3 Calculate the F Statistic","text":"Just like test statistic two-sample t-test, need something similar tell us distance statistic away Null Hypothesis. distance called F Statistic.F Statistic calculated :","code":""},{"path":"intro-to-anova-analysis.html","id":"conducting-the-one-way-anova","chapter":"6 Intro to ANOVA Analysis","heading":"6.5 Conducting the one-way ANOVA","text":"course, previous pages gave brief background one-way ANOVA test.turns conducting test R easy– R even calculates degrees freedom .Looking P Value Species, one-way ANOVA Test tells us significant difference average lengths 3 species. Thus, reject Null Hypothesis, favor Alternative Hypothesis ther significant difference three species.","code":"\nFlowers_long <- na.omit(Flowers_long)\nanova.test <- aov(Length ~ Species, data=na.omit(Flowers_long))\nsummary(anova.test)##             Df Sum Sq Mean Sq F value Pr(>F)    \n## Species      2   1083     541     259 <2e-16 ***\n## Residuals   51    107       2                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"intro-to-anova-analysis.html","id":"conclude-pt.-2-creating-tukey-post-hoc-pairwise-comparisons","chapter":"6 Intro to ANOVA Analysis","heading":"6.6 Conclude Pt. 2: Creating Tukey Post-Hoc Pairwise Comparisons","text":"Knowing difference often enough– want know exactly means significantly different ? case, ’d conduct two-sample t-test every possible two means , irritating, especially comparing many means .Tukey Post-Hoc Pairwise Comparison comes play. name sounds scary, following true:guy named Tukey created method.guy named Tukey created method.“Post-Hoc” means “fact” Latin. knowing fact difference among three means one-way ANOVA, can perform procedure.“Post-Hoc” means “fact” Latin. knowing fact difference among three means one-way ANOVA, can perform procedure.“Pairwise Comparision” means compare two things .“Pairwise Comparision” means compare two things .perform pairwise comparison, run TukeyHSD() command anova.test model.can also plot results, shown :Notice x-axis doesn’t even include 0– pairwise comparisons illustrate species significantly different terms mean length. Notice none confidence intervals include 0 (mean?).","code":"\nTukeyHSD(anova.test, conf.level=.95)##   Tukey multiple comparisons of means\n##     95% family-wise confidence level\n## \n## Fit: aov(formula = Length ~ Species, data = na.omit(Flowers_long))\n## \n## $Species\n##                                   diff   lwr   upr p adj\n## H. caribea red-H. bihai           -7.9  -9.0  -6.8     0\n## H. caribea yellow-H. bihai       -11.4 -12.7 -10.2     0\n## H. caribea yellow-H. caribea red  -3.5  -4.7  -2.4     0\n#Margins will spill over, so you need to adjust these\npar(mar=c(4, 13, 4, 4)+0.1)\n\nplot(TukeyHSD(anova.test, conflevel=.95), las=1, col=\"blue\")"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
